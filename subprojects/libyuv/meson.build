project('libyuv', 'cpp')

# sources used to compile this plug-in
libyuv_sources = [
	'source/compare.cc',
	'source/compare_common.cc',
	'source/compare_gcc.cc',
	'source/compare_mmi.cc',
	'source/compare_msa.cc',
	'source/compare_neon64.cc',
	'source/compare_neon.cc',
	'source/compare_win.cc',
	'source/convert_argb.cc',
	'source/convert.cc',
	'source/convert_from_argb.cc',
	'source/convert_from.cc',
	'source/convert_jpeg.cc',
	'source/convert_to_argb.cc',
	'source/convert_to_i420.cc',
	'source/cpu_id.cc',
	'source/mjpeg_decoder.cc',
	'source/mjpeg_validate.cc',
	'source/planar_functions.cc',
	'source/rotate_any.cc',
	'source/rotate_argb.cc',
	'source/rotate.cc',
	'source/rotate_common.cc',
	'source/rotate_gcc.cc',
	'source/rotate_lsx.cc',
	'source/rotate_mmi.cc',
	'source/rotate_msa.cc',
	'source/rotate_neon64.cc',
	'source/rotate_neon.cc',
	'source/rotate_win.cc',
	'source/row_any.cc',
	'source/row_common.cc',
	'source/row_gcc.cc',
	'source/row_lasx.cc',
	'source/row_lsx.cc',
	'source/row_mmi.cc',
	'source/row_msa.cc',
	'source/row_neon64.cc',
	'source/row_neon.cc',
	'source/row_win.cc',
	'source/scale_any.cc',
	'source/scale_argb.cc',
	'source/scale.cc',
	'source/scale_common.cc',
	'source/scale_gcc.cc',
	'source/scale_lsx.cc',
	'source/scale_mmi.cc',
	'source/scale_msa.cc',
	'source/scale_neon64.cc',
	'source/scale_neon.cc',
	'source/scale_rgb.cc',
	'source/scale_uv.cc',
	'source/scale_win.cc',
	'source/video_common.cc',
]

inc = include_directories('include')
libyuv = static_library('yuv',
  libyuv_sources,
  include_directories: inc,
  install: false,
  gnu_symbol_visibility : 'hidden',
)

# Make this library usable as a Meson subproject.
gst_libyuv_dep = declare_dependency(
  include_directories: inc,
  link_with : libyuv
)
